* 第11章笔记
*** 11.2.2 算法分门别类
[[/home/king/.emacs.img/8728UwF.png]]



1. 非更易型算法
非更易型算法既不改动元素次序，也不改动元素值。它们通过input迭代器和forward迭代器完成工作。
[[/home/king/.emacs.img/15070ogt.png]]

[[/home/king/.emacs.img/150701qz.png]]


2. 更易型算法
更易型算法，要不是直接改变元素值，就是在复制元素到另一区间的过程中改变元素值。


[[/home/king/.emacs.img/15070n0C.png]]


3. 移除型算法
移除型算法是一种特殊的更易型算法。它们可以一处区间内的元素，也可以在复制过程中执行移除动作。
[[/home/king/.emacs.img/15070BJP.png]]


4. 变序型算法
通过元素值的复制和互换，改变元素顺序，但不改变元素值。
[[/home/king/.emacs.img/15070OTV.png]]

5. 排序算法
排序算法是一种特殊的变序型算法，因为它们也改变元素的顺序。
[[/home/king/.emacs.img/15070bdb.png]]

[[/home/king/.emacs.img/15070onh.png]]


6. 已排序区间算法
其所作用的区间在某种排序准则下已排序。
[[/home/king/.emacs.img/150701xn.png]]


7. 数值算法
数值算法以各种不同的方式结合数值元素。
[[/home/king/.emacs.img/15070C8t.png]]



** 11.5 非更易型算法
*** 11.5.1 元素计数
[[/home/king/.emacs.img/6067HlO.png]]


*** 11.5.2 最小值和最大值
[[/home/king/.emacs.img/6067UvU.png]]
[[/home/king/.emacs.img/6067h5a.png]]


*** 11.5.3 查找元素
[[/home/king/.emacs.img/6067uDh.png]]


2. 查找前n个连续匹配值
[[/home/king/.emacs.img/60677Nn.png]]


3. 查找最后一个子区间
[[/home/king/.emacs.img/204963bM.png]]


3. 查找某些元素第一次出现地点
[[/home/king/.emacs.img/20496EmS.png]]
[[/home/king/.emacs.img/20496RwY.png]]


4. 查找两个连续且相等的元素
[[/home/king/.emacs.img/20496e6e.png]]
[[/home/king/.emacs.img/20496rEl.png]]



*** 11.5.4 区间的比较
1. 检验相等性
[[/home/king/.emacs.img/20496FZx.png]]


2. 测试不定序之相等性
[[/home/king/.emacs.img/20496EtG.png]]


3. 查找第一处不同
[[/home/king/.emacs.img/20496R3M.png]]


4. 检验一个区间是否小于另一个区间
[[/home/king/.emacs.img/20496rLZ.png]]


*** 11.5.5 Predicate 用以检验区间
1. 检验是否排序(或局部排序)

[[/home/king/.emacs.img/23955WUd.png]]
[[/home/king/.emacs.img/23955jej.png]]


2. 检验是否被分割
[[/home/king/.emacs.img/23955wop.png]]
[[/home/king/.emacs.img/23955K91.png]]


3. 检验是否形成Heap(最大值元素在第一位)
[[/home/king/.emacs.img/239558GF.png]]

4. 检验All、Any或None
[[/home/king/.emacs.img/23955WbR.png]]



** 11.6 更易型算法

*** 11.6.1 复制元素
    [[/home/king/.emacs.img/23955XOw.png]]
[[/home/king/.emacs.img/23955kY2.png]]




*** 11.6.2 搬移元素
[[/home/king/.emacs.img/23955WiF.png]]


*** 11.6.3 转换和结合元素
1. 转换元素
[[/home/king/.emacs.img/23955jsL.png]]

2. 将两序列的元素结合
[[/home/king/.emacs.img/23955w2R.png]]
[[/home/king/.emacs.img/239559AY.png]]


*** 11.6.4 互换元素
[[/home/king/.emacs.img/23955KLe.png]]


*** 11.6.5 赋值
1. 赋予相同数值
[[/home/king/.emacs.img/23955kfq.png]]


2. 赋予新生值
[[/home/king/.emacs.img/23955xpw.png]]
[[/home/king/.emacs.img/23955-z2.png]]

2. 赋予一系列递增值
[[/home/king/.emacs.img/23955w9F.png]]

*** 11.6.6 替换元素
1. 替换序列内的元素
[[/home/king/.emacs.img/239559HM.png]]
[[/home/king/.emacs.img/23955KSS.png]]


2. 复制并替换元素
[[/home/king/.emacs.img/23955kme.png]]


** 11.7 移除型算法

*** 11.7.1 移除某些元素
1. 移除序列内的元素
[[/home/king/.emacs.img/154490Rs.png]]


2. 复制时一并移除元素
[[/home/king/.emacs.img/15449AwH.png]]


*** 11.7.2 移除重复元素
1. 移除连续重复元素
[[/home/king/.emacs.img/15449N6N.png]]
[[/home/king/.emacs.img/15449aEU.png]]

2. 复制过程中移除重复元素
[[/home/king/.emacs.img/15449nOa.png]]
[[/home/king/.emacs.img/154490Yg.png]]



** 11.8 变序型算法
*** 11.8.1 反转元素次序
1. 反转元素次序
[[/home/king/.emacs.img/15449Ots.png]]



*** 11.8.2 旋转元素
1. 旋转序列内的元素
[[/home/king/.emacs.img/15449NBC.png]]

2. 复制并同时旋转元素
[[/home/king/.emacs.img/15449aLI.png]]
[[/home/king/.emacs.img/15449nVO.png]]


*** 11.8.3 排列元素
[[/home/king/.emacs.img/154490fU.png]]


*** 11.8.4 对元素重新洗牌
1. 以随机数重新洗牌
[[/home/king/.emacs.img/15449Bqa.png]]


*** 11.8.5 将元素向前搬
[[/home/king/.emacs.img/20116R_T.png]]


*** 11.8.6 划分为两个子区间
[[/home/king/.emacs.img/20116rTg.png]]

** 11.9 排序算法

*** 11.9.1 对所有元素排序
[[/home/king/.emacs.img/20116Fos.png]]
[[/home/king/.emacs.img/20116Syy.png]]

*** 11.9.2 局部排序
[[/home/king/.emacs.img/20116E8B.png]]\


[[/home/king/.emacs.img/20116RGI.png]]
[[/home/king/.emacs.img/20116eQO.png]]


*** 11.9.3 根据第n个元素排序

[[/home/king/.emacs.img/20116raU.png]]

*** 11.9.4 Heap算法
    [[/home/king/.emacs.img/201164ka.png]]
[[/home/king/.emacs.img/20116Fvg.png]]
[[/home/king/.emacs.img/20116fDt.png]]
[[/home/king/.emacs.img/20116sNz.png]]


** 11.10 已排序区间算法

*** 11.10.1 查找元素
1. 检查某个元素是否存在
[[/home/king/.emacs.img/20116eXC.png]]

2. 检查数个元素是否存在
[[/home/king/.emacs.img/201164rO.png]]
[[/home/king/.emacs.img/20116F2U.png]]

3. 查找第一个或最后一个可能位置
[[/home/king/.emacs.img/20116SAb.png]]

4. 查找第一个和最后一个可能位置
[[/home/king/.emacs.img/20116fKh.png]]

*** 11.10.2 合并元素
1. 两个已排序集合的总和
[[/home/king/.emacs.img/20116sUn.png]]
[[/home/king/.emacs.img/201165et.png]]


2. 两个已排序集合的并集
[[/home/king/.emacs.img/20116Gpz.png]]


3. 两个已排序集合的交集
[[/home/king/.emacs.img/201164yC.png]]

4. 两个已排序集合的差集
[[/home/king/.emacs.img/20116F9I.png]]

5.合并连贯之已排序区间
[[/home/king/.emacs.img/20116fRV.png]]

** 11.11 数值算法

*** 11.11.1 运算后产生结果
1. 对数列进行某种运算
[[/home/king/.emacs.img/20116sbb.png]]



2. 计算两数列的内积
[[/home/king/.emacs.img/201165lh.png]]


*** 11.11.2 相对数列和绝对数列之间的转换
1. 将相对值转换成绝对值
[[/home/king/.emacs.img/20116Gwn.png]]

2. 将绝对值转换成相对值
[[/home/king/.emacs.img/20116T6t.png]]
[[/home/king/.emacs.img/20116gE0.png]]
