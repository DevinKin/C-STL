* 第11章笔记
*** 11.2.2 算法分门别类
[[/home/king/.emacs.img/8728UwF.png]]



1. 非更易型算法
非更易型算法既不改动元素次序，也不改动元素值。它们通过input迭代器和forward迭代器完成工作。
[[/home/king/.emacs.img/15070ogt.png]]

[[/home/king/.emacs.img/150701qz.png]]


2. 更易型算法
更易型算法，要不是直接改变元素值，就是在复制元素到另一区间的过程中改变元素值。


[[/home/king/.emacs.img/15070n0C.png]]


3. 移除型算法
移除型算法是一种特殊的更易型算法。它们可以一处区间内的元素，也可以在复制过程中执行移除动作。
[[/home/king/.emacs.img/15070BJP.png]]


4. 变序型算法
通过元素值的复制和互换，改变元素顺序，但不改变元素值。
[[/home/king/.emacs.img/15070OTV.png]]

5. 排序算法
排序算法是一种特殊的变序型算法，因为它们也改变元素的顺序。
[[/home/king/.emacs.img/15070bdb.png]]

[[/home/king/.emacs.img/15070onh.png]]


6. 已排序区间算法
其所作用的区间在某种排序准则下已排序。
[[/home/king/.emacs.img/150701xn.png]]


7. 数值算法
数值算法以各种不同的方式结合数值元素。
[[/home/king/.emacs.img/15070C8t.png]]



** 11.5 非更易型算法
*** 11.5.1 元素计数
[[/home/king/.emacs.img/6067HlO.png]]


*** 11.5.2 最小值和最大值
[[/home/king/.emacs.img/6067UvU.png]]
[[/home/king/.emacs.img/6067h5a.png]]


*** 11.5.3 查找元素
[[/home/king/.emacs.img/6067uDh.png]]


2. 查找前n个连续匹配值
[[/home/king/.emacs.img/60677Nn.png]]


3. 查找最后一个子区间
[[/home/king/.emacs.img/204963bM.png]]
